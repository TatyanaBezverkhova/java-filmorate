DROP TABLE IF EXISTS film_genre;
DROP TABLE IF EXISTS film_mpa;
DROP TABLE IF EXISTS likes;
DROP TABLE IF EXISTS genre;
DROP TABLE IF EXISTS mpa;
DROP TABLE IF EXISTS friends;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS film;



CREATE TABLE IF NOT EXISTS genre (
    genre_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR NOT NULL
);

CREATE TABLE IF NOT EXISTS film (
    film_id LONG GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR NOT NULL,
    description VARCHAR(200) NOT NULL,
    releaseDate DATE NOT NULL,
    duration INTEGER,
    CONSTRAINT check_duration CHECK (duration > 0 AND releaseDate >= '1895-12-28')
);

CREATE TABLE IF NOT EXISTS film_genre (
    film_id LONG REFERENCES film (film_id) ON DELETE CASCADE,
    genre_id INTEGER REFERENCES genre (genre_id) ON DELETE CASCADE,
    CONSTRAINT pk_film_genre PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS mpa (
    mpa_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR NOT NULL
);

CREATE TABLE IF NOT EXISTS film_mpa (
    film_id LONG REFERENCES film (film_id) ON DELETE CASCADE,
    mpa_id INTEGER REFERENCES mpa (mpa_id) ON DELETE CASCADE,
    CONSTRAINT pk_film_id PRIMARY KEY (film_id)
);

CREATE TABLE IF NOT EXISTS users (
    user_id LONG GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR NOT NULL,
    login VARCHAR NOT NULL,
    email VARCHAR NOT NULL,
    birthday DATE NOT NULL
    CONSTRAINT check_birthday CHECK (birthday<=CURDATE() AND email LIKE '%@%.%' AND email NOT LIKE '@%' AND email NOT LIKE '%@%@%')
);

CREATE TABLE IF NOT EXISTS friends (
    user_id LONG REFERENCES users (user_id),
    friend_id LONG REFERENCES users (user_id),
    CONSTRAINT pk_friends PRIMARY KEY (user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS likes (
    film_id LONG REFERENCES film (film_id) ON DELETE CASCADE,
    user_id LONG REFERENCES users(user_id) ON DELETE CASCADE,
    CONSTRAINT pk_likes PRIMARY KEY (film_id, user_id)
);

